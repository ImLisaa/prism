name: Java Gradle Build
'on':
  workflow_dispatch: {}
  push: {}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: 5.x
    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        additionalArguments: /overrideconfig mode=Mainline
    - name: Set up JDK 1.17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: adopt
    - name: List Dependencies
      run: gradle dependencies --console=plain > dependencies.txt
      shell: bash
    - name: Collect Dependencies
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies
        path: dependencies.txt
    - name: Test
      run: gradle check --console=plain
      shell: bash
    - if: always()
      name: Report
      uses: dorny/test-reporter@v1
      with:
        name: Gradle Tests
        path: build/test-results/**/*.xml
        reporter: java-junit
        fail-on-error: 'false'
    - name: Package
      run: gradle clean assemble --console=plain
      shell: bash
    - id: get_artifact
      name: Get Artifact Path
      run: |-
        # Find the largest WAR or JAR, and assume that was what we intended to build.
        echo "::set-output name=artifact::$(find build -type f \( -iname \*.jar -o -iname \*.war \) -printf "%p\n" | sort -n | head -1)"
      shell: bash
    - id: get_artifact_name
      name: Get Artifact Name
      run: |-
        # Get the filename without a path
        path="${{ steps.get_artifact.outputs.artifact }}"
        echo "::set-output name=artifact::${path##*/}"
      shell: bash
    - name: Tag Release
      uses: mathieudutour/github-tag-action@v6.1
      with:
        custom_tag: ${{ steps.determine_version.outputs.semVer }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - id: create_release
      name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
        release_name: Release ${{ steps.determine_version.outputs.semVer }} Run ${{ github.run_number }} Attempt ${{ github.run_attempt }}
        draft: ${{ github.ref == 'refs/heads/master' && 'false' || 'true' }}
        name: ${{ github.ref == 'refs/heads/master' && 'false' || 'true' }}
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
        files: ${{ steps.get_artifact.outputs.artifact }}
    - id: get_octopus_artifact
permissions:
  id-token: write
  checks: write
  contents: write
